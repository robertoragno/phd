# Archaeobotany {#sec-archaeobotany}

```{r}
#| echo: false

# IMPORTS

##FUNCTION FOR GENERATING CENTURY BASED
# - UBIQUITY
# - RELATIVE PROPORTIONS
# - A PRINT OF THE TABLE

archaeobotany_tables <- function(x, century) {
  # Load the tidyverse library if it hasn't been loaded in the page before
  library(tidyverse)
  
  # Remove NAs
  x[is.na(x)] <-0 
  
  # Filter the table for the chosen century
  # package: tidyverse
  x <- filter(x, data_valid_start <= century & data_valid_end >= century)
  
  # The total of each row is needed to calculate the relative proportions
  # Note: Calculation starts from column 14 because it is the first column with numerical data. If the table exported from the database changes, this number must be adjusted.
  Total <- rowSums(x[,14:ncol(x)])
  
  # Subsetting the given dataframe by creating a new dataframe with fewer columns 
  plants <- data.frame(x$site_name, x$type_name, 
                       x$data_valid_start, x$data_valid_end,
                       x$culture_type, x[14:ncol(x)], 
                       Total
  )
  
  # Calculating the relative proportions and rounding the results to 2 digits.
  Rel_Prop <- round(((x[14:ncol(x)]/Total)*100), digits=2)
  
  # Ubiquity: 
  #Note: It is given by the no. of sites where the plant is present divided by the total of sites
  # Note: Total of sites: (No. of rows - header row)
  
  # Creating a new dataframe from the Relative Proportions one (Rel_Prop). 
  # Note: This can be done also from the original dataframe, it is not important since it is just a calculation based on presence/absence. I chose this dataframe as it has already the columns I need.
  Pres_Abs <- Rel_Prop
  
  # If the value is > 0 it means that the plant is present: this line replaces this value with a 1 (indicating presence)
  Pres_Abs[Pres_Abs > 0] <- 1
  
  # In how many sites is this plant present?
  Tot_sites_present <- colSums(Pres_Abs)

  # Finally calculate ubiquity
  # Note: The score is multiplied by 100 to obtain results in %
  Ubiquity <- (Tot_sites_present / nrow(Pres_Abs))*100
  
  return(list(
    Ubiquity_exp = Ubiquity,
    Rel_Prop_exp = Rel_Prop,
    Raw_Counts = plants
    ))
}
```


::: callout-important
## Page under construction {style="text-align:justify;"}

The results presented here are preliminary and the chapter has yet to be written.
:::

In this chapter, I will present the macrobotanical data from **X** case studies used to carry on this research ***\[reference to the Materials chapter\]***, along with the quantifications performed on the absolute counts. The data will be first presented temporally, and a discussion of the diachronic trends will follow at the end of the chapter.

## Case studies {style="text-align:justify;"}

The following map shows the sites under investigation, divided by chronology. Please select the desired chronology (or chronologies) from the legend on the right.

```{r}
#| echo: false
#| output: false

# Load libraries
library(sp)
library(rgdal)
library(leaflet)
library(htmltools)
library(tidyverse)
library(fontawesome) 

# Get an Italy shapefile
#download.file(url = 'http://biogeo.ucdavis.edu/data/diva/adm/ITA_adm.zip', 
            #  destfile = 'italy.zip')
#unzip(zipfile = 'italy.zip')

italy <- readOGR('ITA_Peninsula.shp')
bot_map <- read.csv("/Users/robertoragno/Desktop/University/Bari/PhD - Quarto/Database export/plants.csv", header=TRUE, sep=";")

# Grouping
bot_map_R <- filter(bot_map, Chronology=="R")
bot_map_LR<- filter(bot_map, Chronology=="LR")
bot_map_EMA<- filter(bot_map, Chronology=="EMA")
bot_map_Ma<- filter(bot_map, Chronology=="Ma")

#Icon for the map

Icon_red <- awesomeIcons(
  text = fa("wheat-awn"),
  iconColor = 'yellow',
  library = 'fa',
  markerColor = "red"
)

Icon_lightred <- awesomeIcons(
  text = fa("wheat-awn"),
  iconColor = 'yellow',
  library = 'glyphicon',
  markerColor = "lightred"
)

Icon_lightgray <- awesomeIcons(
  text = fa("wheat-awn"),
  iconColor = 'black',
  library = 'glyphicon',
  markerColor = "lightgray"
)

Icon_green <- awesomeIcons(
  text = fa("wheat-awn"),
  iconColor = 'darkgreen',
  library = 'glyphicon',
  markerColor = "lightgreen"
)

# Build the map
italy_bot_map <- leaflet(data=italy) %>%
  addProviderTiles(providers$CartoDB.Positron) %>%
  addPolygons(weight = 1, 
              smoothFactor = 0.5,
              opacity = 0.2, 
              fillOpacity = 0.5,
              fillColor = "#F9F5EB",
              color="#D7A86E"
              ) %>%
  addAwesomeMarkers(data=bot_map_R, lng = bot_map_R$x, lat = bot_map_R$y,
                    group="R", 
                    icon = Icon_red,
                    popup = paste(
                      "ID:", bot_map_R$site_code, "<br>",
                           "<b>Site:</b>", bot_map_R$site_name, "<br>",
                           "Type:", bot_map_R$type_name, "<br>",
                           "Centuries:", bot_map_R$data_valid_start,
                           "-", bot_map_R$data_valid_end, "<br>",
                           "Chronology:", bot_map_R$Chronology, "<br>"
                           ), 
             label=~htmlEscape(bot_map_R$site_name)
 ) %>%
    addAwesomeMarkers(data=bot_map_LR, lng = bot_map_LR$x, lat = bot_map_LR$y,
                    group="LR",
                    icon = Icon_lightred,
                    popup = paste(
                      "ID:", bot_map_LR$site_code, "<br>",
                           "<b>Site:</b>", bot_map_LR$site_name, "<br>",
                           "Type:", bot_map_LR$type_name, "<br>",
                           "Centuries:", bot_map_LR$data_valid_start,
                           "-", bot_map_LR$data_valid_end, "<br>",
                           "Chronology:", bot_map_LR$Chronology, "<br>"
                           ), 
             label=~htmlEscape(bot_map_LR$site_name)
 ) %>%
      addAwesomeMarkers(data=bot_map_EMA, lng = bot_map_EMA$x, lat = bot_map_EMA$y,
                    group="EMA",
                    icon = Icon_lightgray,
                    popup = paste(
                      "ID:", bot_map_EMA$site_code, "<br>",
                           "<b>Site:</b>", bot_map_EMA$site_name, "<br>",
                           "Type:", bot_map_EMA$type_name, "<br>",
                           "Centuries:", bot_map_EMA$data_valid_start,
                           "-", bot_map_EMA$data_valid_end, "<br>",
                           "Chronology:", bot_map_EMA$Chronology, "<br>"
                           ), 
             label=~htmlEscape(bot_map_EMA$site_name)
 ) %>%
        addAwesomeMarkers(data=bot_map_Ma, lng = bot_map_Ma$x, lat = bot_map_Ma$y,
                    group="Ma",
                    icon = Icon_green,
                    popup = paste(
                      "ID:", bot_map_Ma$site_code, "<br>",
                           "<b>Site:</b>", bot_map_Ma$site_name, "<br>",
                           "Type:", bot_map_Ma$type_name, "<br>",
                           "Centuries:", bot_map_Ma$data_valid_start,
                           "-", bot_map_Ma$data_valid_end, "<br>",
                           "Chronology:", bot_map_Ma$Chronology, "<br>"
                           ), 
             label=~htmlEscape(bot_map_Ma$site_name)
 ) %>%
  addLayersControl(
    overlayGroups = c("R", "LR", "EMA", "Ma"),
    options = layersControlOptions(collapsed = FALSE)
  ) %>%
  hideGroup(c("LR", "EMA", "Ma"))

```

```{r}
#| echo: false

italy_bot_map
```

## Ubiquity {style="text-align:justify;"}

In @sec-methods ubiquity has been described as the best way to present the archaeobotanical remains from the Italian peninsula, given the numerous biases in the samples. The heatmap below (@fig-heatmap-ubiquity) provides a good overview of the temporal trends of presence of cereals, legumes, fruits and nuts in the entire area under examination. 

```{r}
#| echo: false

# SQL file name: view_archaeobot
plants_export <- read.csv("/Users/robertoragno/Desktop/Learn R/PhdTests/PhdTests/DATA/Archaeobotany/PlantsExport14July.csv", header=TRUE, sep=";")

```


```{r}
#| code-fold: true
#| output: false
#| code-summary: "Show the code"
#| code-overflow: wrap

# Load the libraries
# Note: these libraries are used for the data visualizations in this page.
library(RColorBrewer)
library(reshape2)
library(ggplot2)
library(hrbrthemes)
library(plotly)
library(patchwork)

## UBIQUITY

## Creating a dataframe that contains the ubiquity of each century under examination. 
Ubiquity_table <- data.frame(
  "I BCE" = archaeobotany_tables(plants_export, -1)$Ubiquity_exp,  
  "I CE" = archaeobotany_tables(plants_export, 1)$Ubiquity_exp,
  "II CE" = archaeobotany_tables(plants_export, 2)$Ubiquity_exp,
  "III CE" = archaeobotany_tables(plants_export, 3)$Ubiquity_exp,
  "IV CE" = archaeobotany_tables(plants_export, 4)$Ubiquity_exp,
  "V CE" = archaeobotany_tables(plants_export, 5)$Ubiquity_exp,
  "VI CE" = archaeobotany_tables(plants_export, 6)$Ubiquity_exp,
  "VII CE" = archaeobotany_tables(plants_export, 7)$Ubiquity_exp,
  "VIII CE" = archaeobotany_tables(plants_export, 8)$Ubiquity_exp,
  "IX CE" = archaeobotany_tables(plants_export, 9)$Ubiquity_exp,
  "X CE" = archaeobotany_tables(plants_export, 10)$Ubiquity_exp,
  "XI CE" = archaeobotany_tables(plants_export, 11)$Ubiquity_exp
  )

# Transform the ubiquity table into a matrix
Ubiquity_mat <- as.matrix(Ubiquity_table) 

# Rename the centuries
colnames(Ubiquity_mat) <- c("1st c. BCE", "1st c. CE", "2nd c. CE",
                            "3rd c. CE", "4th c. CE", "5th c. CE",
                            "6th c. CE", "7th c. CE", "8th c. CE",
                            "9th c. CE", "10th c. CE", "11th c. CE") 

# The data has to be molten to use it with ggplot2
# (package: reshape2)
Ubiquity_melt <- melt(Ubiquity_mat)

# Let's now rename the columns 
colnames(Ubiquity_melt) <- c("Taxon", "Century", "Ubiquity")

# Add a column for the text tooltip
Ubiquity_melt <- Ubiquity_melt %>%
  mutate(text = paste0("Taxon: ", Taxon, "\n", "Century: ", Century, "\n", "Value: ",round(Ubiquity,2)))

# Create the heatmap with ggplot2
Ubiquity_HM <- ggplot(Ubiquity_melt, aes(Century, Taxon, fill=Ubiquity, text=text)) + 
  geom_tile(colour="white") +
  scale_alpha(range=c(0,1)) +
  scale_x_discrete("", expand = c(0, 0)) + 
  scale_y_discrete("", expand = c(0, 0)) + 
  theme_grey(base_size = 9) + 
  theme(legend.position = "right",
        axis.ticks = element_blank(), 
        axis.text.x = element_text(angle = 90, hjust = 0)
        ) +
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
  labs(
    title="Ubiquity",
    subtitle="Diachronical heatmap of recorded plant species"
  ) +
  scale_fill_gradient(low = "white", high = "black")

```

```{r}
#| echo: false
#| label: fig-heatmap-ubiquity
#| fig-cap: "Diachronical heatmap of recorded plant species" 
#| fig-width: 5
#| fig-height: 6

ggplotly(Ubiquity_HM, tooltip="text")

```



