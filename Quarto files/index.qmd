---
always_allow_html: true
---

# Abstract {.unnumbered style="text-align:justify;"}

This dissertation explores the subsistence methods, economic systems and environmental adaptations of Italian peasant communities in the 1^st^ millennium CE, with a particular focus on the transitional period from the Roman Empire to the early medieval era. Existing work on agricultural production in this period has been based on literary sources and field surveys, or has focused on individual sites or regional collections, while a multi-source archaeological study is absent from the discourse. This dissertation addresses this gap by using environmental proxies, reconstructing the historical agricultural landscape through the occurrence patterns of plants and animals in legacy data. To this end, 190 botanical and 466 faunal assemblages from 309 sites[^index-1] are quantitatively analysed within a Bayesian framework, using multilevel binomial and beta-binomial models to account for overdispersion and class imbalance in the datasets. The results reveal a strong trend towards regionalisation in agricultural strategies during the early medieval period. In addition, these findings expose variations in agricultural techniques and dietary patterns across Roman settlements, shedding light on the extent to which Roman agricultural and economic frameworks persisted or changed during the early medieval transition, and the adaptive agricultural strategies adopted by farmers. The quantitative analytical findings of this dissertation are also contextualised alongside wider historical sources, archaeological evidence, and current debate, allowing for a bottom-up understanding of the agricultural regimes in question. This work represents the first attempt to use temporally and geographically diverse bioarchaeological data to visualise the Italian agricultural landscape across the *longue dur√©e.* By systematising the data in an open database, this dissertation also represents an effort at quantitative knowledge sharing in archaeology. Overall, these novel perspectives on human-nature interaction allow scholars to methodologically, theoretically and empirically evaluate agricultural strategies during the transition from the Roman Empire to the politically fragmented landscape of the early medieval Italian peninsula.

[^index-1]: Last update: January 2024.


# Database status

## Distribution map

::: {.content-hidden when-format="pdf"}
The map below (@fig-db-status-map) shows the distribution of the samples used for this project. Hover to the point of interest and click on the marker to see what data is available.

```{r}
#| echo: false
#| output: false

# Load libraries
library(sp)
library(rgdal)
library(leaflet)
library(leaflet.extras)
library(htmltools)
library(tidyverse)

# Get an Italy shapefile
#download.file(url = 'http://biogeo.ucdavis.edu/data/diva/adm/ITA_adm.zip', 
            #  destfile = 'italy.zip')
#unzip(zipfile = 'italy.zip')

italy <- readOGR('Italy_SHP/ITA_Peninsula.shp')
data_map <- read.csv("/Users/robertoragno/Desktop/University/Bari/Tesi PhD/GIS/MAIN_INDEX.csv", header=TRUE, sep=";")

# Create a palette that maps factor levels to colors
map_pal <- leaflet::colorFactor(palette = c("bot" = "#283618", 
                                           "bot_poll" = "#3e9b1c", 
                                           "bot_zoo" = "#bc4749",
                                           "bot_zoo_poll" = "goldenrod",
                                           "poll" = "steelblue",
                                           "zoo" = "#bc6c25",
                                           "zoo_poll" = "#f06c9b"
                                           ), 
                               domain = data_map$available_data)

italy_map <- leaflet(data=italy) %>%
  addProviderTiles(providers$CartoDB.Positron,  group = "Political") %>%
  addProviderTiles(providers$Esri.WorldPhysical, group = "Physical") %>%
  addPolygons(weight = 1, 
              smoothFactor = 0.5,
              opacity = 0.3, 
              fillOpacity = 0.4,
              fillColor = "#F9F5EB",
              color="#D7A86E"
              ) %>%
  addCircleMarkers(
    lng=data_map$x, lat=data_map$y,
    label = ~htmlEscape(data_map$site_name),
    color=map_pal(data_map$available_data),
    fillOpacity = 0.5,
    stroke = F,
    radius=4,
     popup = paste(
                   "<b>", data_map$site_name, "</b>",
                   "<hr style='border:2px solid green; color: solid green, border-radius:2px; margin-top:1.5px; margin-bottom:5px'>",
                   "<b>Site ID:</b>", data_map$site_code, "<br>",
                   "<b>Type:</b>", data_map$type_name, "<br>",
                   "<b>Chronology (c.):</b>", data_map$startcentury,
                   "-", data_map$endcentury, "<br>",
                   "<b>Data:</b>", data_map$available_data, "<br>",
                   "<br><b>Database records</b><br>",
                   "ID BOT:", data_map$bot, "<br>",
                   "ID ZOO:", data_map$zoo, "<br>",
                   "ID POLL:", data_map$poll
                           )
  ) %>% 
  addLegend(position = "bottomright",
            values = data_map$available_data, # data frame column for legend
            opacity = .7, # alpha of the legend
            pal = map_pal, # palette declared earlier
            title = "Data") %>%
  addResetMapButton() %>%
  addFullscreenControl() %>%
  addLayersControl(baseGroups = c("Political", "Physical"),
  options = layersControlOptions(collapsed = T))  %>%
  htmlwidgets::onRender("
    function(el, x) {
      var myMap = this;
      myMap.on('baselayerchange',
        function (e) {
          myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
        })
    }")

```

```{r}
#| echo: false
#| label: fig-db-status-map
#| fig-cap: "**Legend**: `bot` = Archaeobotanical remains, `zoo` = Zooarchaeological remains, `poll` = Pollen remains. If the codes are combined, more than one type of data is available for the same context and chronology. Pollen is only included as a reference."

italy_map
```
:::


## Counts

```{r}
#| echo: false

# A recap with the database status through a bar chart 

# DATA TYPE
# To get the number of non NA entries, use colSums()
# We are only interested in columns bot, zoo, poll (cols 13:15)
db_status_recap.data <- colSums(!is.na(data_map[c(13:15)])) 
db_status_recap.data <- data.frame(Type = names(db_status_recap.data), Count = db_status_recap.data, row.names =NULL )

db_status_recap.data.plot <- ggplot(db_status_recap.data, aes(x=Type, y = Count)) +
  geom_bar(stat = "identity", width = .8, fill="steelblue") + 
  geom_text(aes(label=Count), vjust=3, size=5, color="white")+
  theme_minimal()

# TYPE OF SITES
db_status_recap.sitetype <- summary(as.factor(data_map$type_name))
db_status_recap.sitetype <- data.frame(Type = names(db_status_recap.sitetype), Count = db_status_recap.sitetype, row.names =NULL )

db_status_recap.sitetype.plot <- ggplot(db_status_recap.sitetype, aes(x=Count, y = Type)) +
  geom_bar(stat = "identity", width = .8, fill="steelblue") + 
  geom_text(aes(label=Count), hjust=-0.1, size=3.5, color="black")+
  theme_minimal()

```

The graphs below (@fig-db-status-counts) provide counts of the (a) assemblage types and (b) site types in the database.


```{r}
#| echo: false
#| layout: "[[100,100], [1]]"
#| label: fig-db-status-counts
#| fig-cap: "Database status"
#| fig-subcap: 
#|  - "Data type." 
#|  - "Site type."
#| fig-height: 6


db_status_recap.data.plot
db_status_recap.sitetype.plot
```
